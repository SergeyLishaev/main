package backend.access;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import backend.entities.Doctor;
import backend.entities.FullName;
import backend.entities.Patient;

public class PatientDAO extends AbstractDAO<Patient>{

	private void createTable() {
		String sqlQuery = "CREATE TABLE patients (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY, surname VARCHAR(25) NOT NULL,"
				+ " name VARCHAR(25) NOT NULL, patronymic VARCHAR(25) NOT NULL,"
				+ " phone_number VARCHAR(50) NOT NULL)";
		doQuery(sqlQuery);
	}

	public boolean createEntity(Patient patient) throws SQLException {
		String sqlCheckQuary = "SELECT * FROM patients WHERE surname = '" + patient.getSurname() + "' AND name = '" + patient.getName() + "' AND patronymic = '" + patient.getPatronymic() + "'";
		if(checkQuery(sqlCheckQuary)) return false;
		String sqlQuery = "INSERT INTO patients (surname, name, patronymic, phone_number)"
				+ " VALUES("  + "'" + patient.getSurname() + "'" + ", "
				+ "'" + patient.getName() + "'" + ", " + "'" + patient.getPatronymic() + "'" + ", " + "'"
				+ patient.getPhoneNumber() + "'" + ")";
		doQuery(sqlQuery);
		return true;

	}

	public void deleteEntity(Patient patient) {
		String sqlQuery = "DELETE FROM patients WHERE ID = " + patient.getId();
		doQuery(sqlQuery);

	}

	public boolean updateEntity(Patient patient) throws SQLException {
		String sqlCheckQuary = "SELECT * FROM patients WHERE surname = '" + patient.getSurname() + "' AND name = '" + patient.getName() + "' AND patronymic = '" + patient.getPatronymic() + "'";
		if(checkQuery(sqlCheckQuary)) return false;
		String sqlQuery = "UPDATE patients SET SURNAME = " + "'" + patient.getSurname() + "'" + ", NAME = " + "'" + patient.getName()
				+ "'" + ", PATRONYMIC = " + "'" + patient.getPatronymic() + "'" + ", PHONE_NUMBER = " 
				+ "'" + patient.getPhoneNumber() + "'" + " WHERE ID = " + patient.getId();
		doQuery(sqlQuery);
		return true;
	}

	public ArrayList<Patient> showTable() {
		String sqlQuery = "SELECT * FROM patients";
		return showTable(sqlQuery);
	}

	@Override
	protected ArrayList<Patient> executeResultSet(ResultSet resultSet) throws SQLException {
		ArrayList<Patient> listOfPatients = new ArrayList();
		while (resultSet.next()) {
			Patient patient = new Patient(resultSet.getLong("id"), resultSet.getString("surname"), resultSet.getString("name"), resultSet.getString("patronymic"), resultSet.getString("phone_number"));
			listOfPatients.add(patient);
		}
		resultSet.close();
		return listOfPatients;
	}

	@Override
	protected Patient returnEntity(ResultSet resultSet) throws SQLException {
		Patient patient = null;
		while (resultSet.next()) {
			patient = new Patient(resultSet.getLong("id"), resultSet.getString("surname"), resultSet.getString("name"), resultSet.getString("patronymic"), resultSet.getString("phone_number"));
		}
		resultSet.close();
		return patient;
	}
	
	protected ArrayList<FullName> showPatientName(){
		ArrayList<Patient> listOfPatients = showTable();
		ArrayList<FullName> listOfNames = new ArrayList<FullName>();
		for(int i = 0; i < listOfPatients.size(); i++){
			listOfNames.add(new FullName(listOfPatients.get(i).getId(), listOfPatients.get(i).getSurname(),
					listOfPatients.get(i).getName(), listOfPatients.get(i).getPatronymic()));
		}
		return listOfNames;
	}

}

